<?php
namespace App\Http\Controllers\App;
/**
 * 公共的信息获取
 */
use App\Http\Controllers\BaseController;
use App\Jobs\InteractMsg;
use App\Logics\Models\PlatformWechat;
use App\Logics\Repositories\src\MaterialRepository;
use App\Logics\Repositories\src\UserRepository;
use App\Logics\Services\src\CommonService;
use App\Logics\Traits\WechatTrait;
use Illuminate\Support\Carbon;

class CommonController extends BaseController
{
    use WechatTrait;
    public function __construct(CommonService $service)
    {
        parent::__construct();
        $this->service = $service;
    }
    /**
     * 测试方法
     */
    public function Test()
    {
        /*$rel = scandir('D:\www\php\laravel\novel_sys\public\img\wechat\letter');
        $dir = 'img/wechat/act/';
        $mat = new MaterialRepository();
        foreach ($rel as $v) {
            if (in_array($v, ['', '.', '..'])) continue;
            $mat->create(['type'=>3, 'img'=>$dir.$v]);
        }
        dd($rel);*/
        try
        {
            $userRep = new UserRepository();
            $plat_wechat = PlatformWechat::first();
            $intermsg = \App\Logics\Models\InteractMsg::first();
            $users = $userRep->NoteInteractInfo($plat_wechat);
            if (!$users) {
                $users[3] = ['oZxkd1bgyw99Kq0NwTnDiRCFNAIE', time()+86400];
            }
            InteractMsg::dispatch($plat_wechat, $intermsg); // 立即执行任务
            // 过1分钟执行任务
            InteractMsg::dispatch($plat_wechat, $intermsg)->delay(Carbon::createFromTimestamp(time()+60));
            // 可是我这边测试的时候；这3个消息是几乎同时发送到我手机的
            dump(now());
            dump($users);
            dd($intermsg);
            // return $this->service->Test();
        }
        catch (\Exception $e)
        {
            return $this->result(['file'=>$e->getFile(), 'line'=>$e->getLine()], $e->getCode(), $e->getMessage());
        }
    }
    /**
     * 获取公共配置
     */
    public function CommonSets()
    {
        try
        {
            return $this->service->CommonSets();
        }
        catch (\Exception $e)
        {
            return $this->result(['file'=>$e->getFile(), 'line'=>$e->getLine()], $e->getCode(), $e->getMessage());
        }
    }
    /**
     * 获取公共长文本配置
     */
    public function CommonTexts()
    {
        try
        {
            return $this->service->CommonTexts();
        }
        catch (\Exception $e)
        {
            return $this->result(['file'=>$e->getFile(), 'line'=>$e->getLine()], $e->getCode(), $e->getMessage());
        }
    }
    /**
     * 获取带参数的二维码
     */
    public function ProductQRCode()
    {
        try
        {
            return $this->service->ProductQRCode();
        }
        catch (\Exception $e)
        {
            return $this->result(['file'=>$e->getFile(), 'line'=>$e->getLine()], $e->getCode(), $e->getMessage());
        }
    }
}
